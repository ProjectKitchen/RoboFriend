<?xml version="1.0"?>
<launch>
	<!-- Global Arguments -->
	<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
	<arg name="lidar" default="true"/>
	<arg name="slam" default="true"/>
	<arg name="fdet" default="false"/> 

	<!-- Arguments: LIDAR -->
	<arg name="port" default="/dev/ttyUSB0" />
	<arg name="frame_id" default="map" />

	<!-- Arguments: SLAM -->
	<arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
	<arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>

	<!-- Drivers: LIDAR -->
  	<group if="$(arg lidar)">
		<include file="$(find hls_lfcd_lds_driver)/launch/hlds_laser.launch" />
	</group>

	<!-- Drivers: SLAM -->
	<group if="$(arg slam)">
	  	<!-- TurtleBot3 -->
		<include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    		<arg name="model" value="$(arg model)" />
  		</include>

		<!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
		<include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
			<arg name="model" value="$(arg model)"/>
			<arg name="configuration_basename" value="$(arg configuration_basename)"/>
		</include>
	</group>

	<node pkg="robofriend" type="RobobrainNode.py" name="robofriend_robobrain" output="screen" />
	<node pkg="robofriend" type="RFIDData.py" name="robofriend_rfid_data" output="screen" />
	<node pkg="robofriend" type="PCBSensorData.py" name="robofriend_pcb_sensor_data" output="screen" />
	<node pkg="robofriend" type="SerialNode.py" name="robofriend_serial_data_handler" output="screen" />
	<group if="$(arg fdet)">
		<node pkg="robofriend" type="FaceDetectionNode.py" name="robofriend_face_detection_node" output="screen" />
	</group>	
</launch>
